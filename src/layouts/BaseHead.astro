---
import { ViewTransitions } from "astro:transitions";

interface Props {
  title: string;
  description: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="generator" content={Astro.generator} />

<!-- Favicon -->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />

<!-- Fonts -->
<link
  rel="preload"
  href="/fonts/Inter-Regular.woff2"
  as="font"
  type="font/woff2"
/>
<link
  rel="preload"
  href="/fonts/Inter-Bold.woff2"
  as="font"
  type="font/woff2"
/>
<link
  rel="preload"
  href="/fonts/PlayfairDisplay-Regular.ttf"
  as="font"
  type="font/ttf"
/>
<link
  rel="preload"
  href="/fonts/PlayfairDisplay-Bold.ttf"
  as="font"
  type="font/ttf"
/>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!--  View Transitions -->
<ViewTransitions />

<!--  Theme Toggle -->
<script is:inline>
  document.addEventListener("astro:page-load", () => {
    const setTheme = () => {
      const theme = (() => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      })();

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }

      window.localStorage.setItem("theme", theme || "light");
    };

    setTheme();

    document.addEventListener("astro:after-swap", setTheme);
  });
</script>
